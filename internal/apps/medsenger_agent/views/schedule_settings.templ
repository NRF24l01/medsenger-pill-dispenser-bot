package views

import "github.com/tikhonp/medsenger-pill-dispenser-bot/internal/bviews"
import "github.com/tikhonp/medsenger-pill-dispenser-bot/internal/db/models"
import "strconv"
import "time"

templ Schedule(s models.ScheduleData, pd *models.PillDispenser, contract *models.Contract, isNew bool) {
	if isNew {
		<h3>Новое расписание</h3>
	} else {
		<h3>Расписание { s.Schedule.CreatedAt.GoString() }</h3>
	}
	<form hx-post={ "/settings/set-schedule/" + pd.SerialNumber + "?agent_token=" + contract.AgentToken } hx-target="#schedules-list" hx-swap="afterbegin">
		<fieldset>
			<legend>Настройки расписания таблетницы</legend>
			<input
				type="checkbox"
				id="offline-notify"
				name="offline-notify"
				if s.Schedule.IsOfflineNotificationsAllowed {
					checked
				}
			/>
			<label for="offline-notify">Уведомлять пользователя без подключения к интернету</label>
		</fieldset>
		<label for="refresh-rate">Частота обновления (в секундах)</label>
		<input type="number" id="refresh-rate" name="refresh-rate" value={ strconv.Itoa(int(s.Schedule.RefreshRateInterval.Int64)) }/>
		for _, cell := range s.Cells {
			<p>
				<label for={ "cell-time-" + strconv.Itoa(cell.Index) }>Ячейка намер { strconv.Itoa(cell.Index) }</label>
				<input
					type="datetime-local"
					id={ "cell-time-" + strconv.Itoa(cell.Index) }
					name={ "cell-time-" + strconv.Itoa(cell.Index) }
					value={ cell.Time.Time.Format("2006-01-02T15:04") }
					min={ time.Now().Format("2006-01-02T15:04") }
				/>
			</p>
		}
		<button type="submit">Сохранить</button>
	</form>
}

templ ScheduleSettings(pd *models.PillDispenser, schedules []models.ScheduleData, contract *models.Contract) {
	@bviews.Base("Настройки") {
		<h1>Настройка таблетницы SN: { pd.SerialNumber }</h1>
		<button type="button" hx-get={ "/settings/set-schedule/" + pd.SerialNumber + "/new-schedule-form" + "?agent_token=" + contract.AgentToken } hx-target="#schedules-list" hx-swap="afterbegin">Добавить расписание</button>
		<br/>
		<div id="schedules-list">
			for _, schdl := range schedules {
				@Schedule(schdl, pd, contract, false)
			}
		</div>
	}
}
